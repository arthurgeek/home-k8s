---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app sonarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3

  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: volsync
      namespace: volsync-system

  values:
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1030
        runAsGroup: 100
        fsGroup: 100
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }

    controllers:
      sonarr:
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          app:
            env:
              TZ: ${TIMEZONE}
              SONARR__INSTANCE_NAME: Sonarr
              SONARR__PORT: &port 8989
              SONARR__API_KEY:
                valueFrom:
                  secretKeyRef:
                    name: sonarr-secret
                    key: api-key
            image:
              repository: ghcr.io/onedr0p/sonarr-develop
              tag: 4.0.9.2457@sha256:d981084e9534a6f4a089926625ba4679089dbced7693460df7d83233177c1f92
            resources:
              requests:
                cpu: 30m
                memory: 248M
              limits:
                memory: 1.5Gi
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }

    service:
      app:
        controller: *app
        ports:
          http:
            port: *port

    ingress:
      app:
        className: internal
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http

    persistence:
      config:
        existingClaim: config-sonarr
      data:
        existingClaim: data
